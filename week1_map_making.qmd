---
title: "week1 EDS 223"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
install.packages("sf")
install.packages("stars")
install.packages("tmap")
install.packages("here")
```

```{r}
library(sf) # for vector data (more soon!)
library(stars) # for raster data (more soon!)
library(tmap) # for static and interactive maps
library(here)

```

```{r}
# raster of global elevations
world_elevation <- read_stars(here("data","worldelevation.tif"))

# country boundaries
world_vector <- read_sf(here("data","worldvector.gpkg"))

# major cities
world_cities <- read_sf(here("data","worldcities.gpkg"))
```

```{r}
# plotting a single spatial object

tm_shape(world_vector) + # defines the spatial object to plot
  tm_polygons() # defines how to plot the object

```


```{r}
# plotting two spatial objects

tm_shape(world_vector) + # defines the FIRST spatial object to plot
  tm_polygons() + # defines how to plot the FIRST object
tm_shape(world_cities) + # defines the SECOND objet to plot
  tm_dots() # defines how to plot the SECOND object
```

```{r}
# plotting vector and raster spatial objects

tm_shape(world_elevation) + # plot global elevations
  tm_raster() + # tm_raster for raster data
tm_shape(world_vector) +
  tm_borders() +
tm_shape(world_cities) +
  tm_dots() +
  tm_text("name")
```

```{r}
tm_shape(world_cities) + # plot world_cities first
  tm_dots() +
  tm_text("name") +
tm_shape(world_elevation) +
  tm_raster() +
tm_shape(world_vector) +
  tm_borders() 
```

```{r}
tm_shape(world_elevation) + 
  tm_raster() + 
tm_shape(world_vector) +
  tm_borders() +
tm_shape(world_cities, is.master = TRUE) + # plot world_cities last, but set as main shape
  tm_dots() +
  tm_text("name")
```

```{r}
tm_shape(world_elevation, bbox = c(-15, 35, 45, 65)) + # add bounding box to restrict extent
  tm_raster() + 
tm_shape(world_vector) +
  tm_borders() 
```

```{r}
tm_shape(world_elevation, bbox = world_cities) + # bounding box = extent of world_cities
  tm_raster() + 
tm_shape(world_vector) +
  tm_borders() 
```

```{r}
tm_shape(world_vector) +
  tm_polygons(col = "lightblue",
              border.col = "black",
              lwd = 0.5,
              lty = "dashed")

```

```{r}
tm_shape(world_vector) + 
  tm_borders(col = "red")

```

```{r}
tm_shape(world_vector) + 
  tm_fill(col = "lightblue")
```

```{r}
tm_shape(world_vector) +
  tm_fill("CO2_emissions")
```

```{r}
tm_shape(world_cities) + 
  tm_squares()
```

```{r}
tm_shape(world_vector) +
  tm_polygons("life_expectancy", 
              palette = c("red", "yellow"),
              title = "Life Expectancy in Years")
```

```{r}
install.packages("viridisLite")
library(viridisLite)
```

```{r}
tm_shape(world_vector) + 
  tm_polygons("life_expectancy", 
              palette = viridis(3),
              title = "Life Expectancy in Years"
              )

```

```{r}
tm_shape(world_vector) + 
  tm_polygons() + 
  tm_shape(world_cities) + 
  tm_symbols(size = "pop2020",
             legend.size.is.portrait = TRUE)
``` 


```{r}
tm_shape(world_vector) + 
  tm_graticules() +
  tm_fill() 
```


```{r}
tm_shape(world_vector) + 
  tm_fill() + 
  tm_scale_bar() +
   tm_compass(position = c("left", "top"),
              size = .5)
```

```{r}
tmap_mode("view")

tm_shape(world_vector) + 
  tm_fill(col = "wb_income_region",
          palette = viridisLite::plasma(5), 
          title = "Regional Income") +
  tm_layout(bg.color = "grey95", 
            main.title = "global income by country", 
            frame = FALSE)

```

```{r}
tmap_mode("plot")

map1 <- tm_shape(world_vector) + 
  tm_fill(col = "wb_income_region",
          palette = viridisLite::plasma(5), 
          title = "Regional Income") +
  tm_layout(bg.color = "grey95", 
            main.title = "global income by country", 
            frame = FALSE)

tmap_save(map1, here("tmap_example.png"))

```












